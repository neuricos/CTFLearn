#!/usr/bin/env python3

def getSolution(hashcode_rem, chars_rem):
    possible_solutions = []
    rem = hashcode_rem % 31

    while rem < 123 and hashcode_rem - rem >= 0:
        if chr(rem).isdigit() or chr(rem).isalpha():
            if chars_rem == 1:
                solution = [rem]
                possible_solutions.append(solution)
            else:
                sub_solutions = getSolution((hashcode_rem - rem) // 31, chars_rem - 1)
                for sub_solution in sub_solutions:
                    solution = sub_solution + [rem]
                    possible_solutions.append(solution)
        rem += 31
    return possible_solutions

def checkSolution(solution, target_hashcode):
    tot = 0
    for i in range(len(solution)):
        p = len(solution) - 1 - i
        tot += solution[i] * pow(31, p)
    return tot == target_hashcode

if __name__ == '__main__':
    hashcode = 1471587914
    lowercase_hashcode = 1472541258

    solutions = getSolution(hashcode, 6)
    target_solutions = []

    for solution in solutions:
        lowercase_solution = [ord(chr(c).lower()) for c in solution]
        if checkSolution(lowercase_solution, lowercase_hashcode):
            target_solutions.append(solution)

    print(target_solutions)

    target_solution = target_solutions[0]
    flag = "".join([chr(c) for c in target_solution])
    print(f"flag = {flag}")